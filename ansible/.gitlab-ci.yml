
.ansible_linter_defaults:
    stage: validation
    before_script:
        - if [ "0$JOB_ROOT_DIR" == "0" ]; then ROOT_DIR=gitlab-ci; else ROOT_DIR=$JOB_ROOT_DIR ; fi
        - echo "[DEBUG] ROOT_DIR[$ROOT_DIR]"
        - mkdir -p "$CI_PROJECT_DIR/artifacts/$CI_JOB_STAGE/$CI_JOB_NAME"
        - mkdir -p "$CI_PROJECT_DIR/artifacts/$CI_JOB_STAGE/tests"
        - export PYTHON_VERSION=`python -c 'import sys; version=sys.version_info[:3]; print("{0}.{1}.{2}".format(*version))'`
        - apt update
        - apt install --no-install-recommends -y git
        - python3 -m venv env
        - . env/bin/activate
        - pip install --upgrade pip
        - pip install -r $ROOT_DIR/ansible/requirements.txt
        - mkdir $PYTHON_VERSION
    script:
        - ansible-lint -p --nocolor --parseable-severity "$ANSIBLE_LINT_PATH" > "$CI_PROJECT_DIR/artifacts/$CI_JOB_STAGE/$CI_JOB_NAME/$PYTHON_VERSION-ansible-lint.log" 1>&1 || ANSIBLE_LINT=$?
        - cat "$CI_PROJECT_DIR/artifacts/$CI_JOB_STAGE/$CI_JOB_NAME/$PYTHON_VERSION-ansible-lint.log" | ansible-lint-to-junit-xml > "$CI_PROJECT_DIR/artifacts/$CI_JOB_STAGE/tests/$PYTHON_VERSION-ansible-lint.junit.xml"
        - ls -la $PYTHON_VERSION
        - if [ $ANSIBLE_LINT > 0 ]; then echo "ansible lint failed with $ANSIBLE_LINT"; exit $ANSIBLE_LINT; fi
    after_script:
        - echo deactivate
    artifacts:
      expire_in: 3 days
      when: always
      paths:
          - "artifacts/*"
      reports:
          junit:
              - "$CI_PROJECT_DIR/artifacts/$CI_JOB_STAGE/tests/*.junit.xml"
    rules:
        - if: '$CI_COMMIT_BRANCH == "master"'
          when: never
        - if: '$CI_COMMIT_BRANCH'
          when: always
        - when: never

